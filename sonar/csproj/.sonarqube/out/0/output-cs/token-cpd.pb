Ž

5F:\Repository\CLI\sonar\csproj\GrpcService\Program.cs
	namespace		 	
GrpcService		
 
{

 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} â

EF:\Repository\CLI\sonar\csproj\GrpcService\Services\GreeterService.cs
	namespace 	
GrpcService
 
{		 
public

 

class

 
GreeterService

 
:

  !
Greeter

" )
.

) *
GreeterBase

* 5
{ 
private 
readonly 
ILogger  
<  !
GreeterService! /
>/ 0
_logger1 8
;8 9
public 
GreeterService 
( 
ILogger %
<% &
GreeterService& 4
>4 5
logger6 <
)< =
{ 	
_logger 
= 
logger 
; 
} 	
public 
override 
Task 
< 

HelloReply '
>' (
SayHello) 1
(1 2
HelloRequest2 >
request? F
,F G
ServerCallContextH Y
contextZ a
)a b
{ 	
return 
Task 
. 

FromResult "
(" #
new# &

HelloReply' 1
{ 
Message 
= 
$str "
+# $
request% ,
., -
Name- 1
} 
) 
; 
} 	
} 
} Ì
5F:\Repository\CLI\sonar\csproj\GrpcService\Startup.cs
	namespace 	
GrpcService
 
{ 
public 

class 
Startup 
{ 
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddGrpc 
( 
) 
; 
} 	
public 
void 
	Configure 
( 
IApplicationBuilder 1
app2 5
,5 6
IWebHostEnvironment7 J
envK N
)N O
{ 	
if 
( 
env 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. %
UseDeveloperExceptionPage -
(- .
). /
;/ 0
} 
app 
. 

UseRouting 
( 
) 
; 
app   
.   
UseEndpoints   
(   
	endpoints   &
=>  ' )
{!! 
	endpoints"" 
."" 
MapGrpcService"" (
<""( )
GreeterService"") 7
>""7 8
(""8 9
)""9 :
;"": ;
	endpoints$$ 
.$$ 
MapGet$$  
($$  !
$str$$! $
,$$$ %
async$$& +
context$$, 3
=>$$4 6
{%% 
await&& 
context&& !
.&&! "
Response&&" *
.&&* +

WriteAsync&&+ 5
(&&5 6
$str	&&6 Õ
)
&&Õ Ö
;
&&Ö ×
}'' 
)'' 
;'' 
}(( 
)(( 
;(( 
})) 	
}** 
}++ 